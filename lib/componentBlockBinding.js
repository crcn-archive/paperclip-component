// Generated by CoffeeScript 1.6.2
(function() {
  var bindable, pc, type,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  pc = require("paperclip");

  type = require("type-component");

  bindable = require("bindable");

  module.exports = function(Component) {
    var ComponentBlockBinding;

    return ComponentBlockBinding = (function(_super) {
      __extends(ComponentBlockBinding, _super);

      /*
      */


      function ComponentBlockBinding() {
        this._changeViewOptions = __bind(this._changeViewOptions, this);
        this._createComponent = __bind(this._createComponent, this);
        this.unbind = __bind(this.unbind, this);
        this._onChange = __bind(this._onChange, this);        ComponentBlockBinding.__super__.constructor.apply(this, arguments);
        this._settings = new bindable.Object();
        this._settings.bind("options", this._changeViewOptions);
      }

      /*
      */


      ComponentBlockBinding.prototype._onChange = function(value) {
        var ops;

        ops = this._fixOptions(value);
        if (!this._component) {
          this._createComponent();
        }
        return this._settings.set("options", ops);
      };

      /*
      */


      ComponentBlockBinding.prototype.unbind = function() {
        var _ref, _ref1;

        ComponentBlockBinding.__super__.unbind.call(this);
        if ((_ref = this.child) != null) {
          _ref.unbind();
        }
        return (_ref1 = this._component) != null ? _ref1.dispose() : void 0;
      };

      /*
      */


      ComponentBlockBinding.prototype._createComponent = function(viewName) {
        this.viewName = viewName;
        this._component = new Component();
        this._component.render();
        this.section.append(this._component.section.toFragment());
        if (this.contentTemplate) {
          return this.child = this.contentTemplate.bind(this._component);
        }
      };

      /*
      */


      ComponentBlockBinding.prototype._changeViewOptions = function(componentOptions) {
        var key, _results;

        _results = [];
        for (key in componentOptions) {
          _results.push(this._component.set(key, componentOptions[key]));
        }
        return _results;
      };

      /*
      */


      ComponentBlockBinding.prototype._fixOptions = function(options) {
        if (type(options) === "object") {
          return options;
        } else {
          return {
            model: options
          };
        }
      };

      return ComponentBlockBinding;

    })(pc.BaseBlockBinding);
  };

}).call(this);
